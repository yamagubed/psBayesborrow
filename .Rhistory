out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect <- c(0.1,0.1)
indata <- trial.simulation.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, accrual=accrual,
out.mevent.CT, out.mevent.CC, driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect=cov.effect)
n.EC <- 50
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
mypsmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
mypsmatch
mypsmatch$subjid.EC
mypsmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
mypsmatch$subjid.EC
method.whomatch <- "conc.treat"
method.matching <- "nearest"
method.psorder  <- NULL
mypsmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
mypsmatch$subjid.EC
method.whomatch <- "conc.contl"
method.matching <- "nearest"
method.psorder  <- "large"
mypsmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
mypsmatch$subjid.EC
method.whomatch <- "conc.contl"
method.matching <- "nearest"
method.psorder  <- "large"
mypsmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
mypsmatch$subjid.EC
method.whomatch <- "conc.contl"
method.matching <- "nearest"
method.psorder  <- "large"
mypsmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
mypsmatch$subjid.EC
subjid.EC.run <- mypsmatch$subjid.EC
subjid.EC.exp <- c(
605,822,943,849,705,725,1080,797,971,498,1063,1147,339,873,731,1055,451,846,874,
543,847,1029,414,552,445,1037,678,205,1142,955,1119,904,511,800,692,657,702,1056,
665,972,273,272,233,940,196,180,578,1062,973,386)
test_that("Check psmatch results",{
expect_identical(subjid.EC.run,subjid.EC.exp)
})
library(psBayesborrow)
library(psBayesborrow)
results <- rhub::check_for_cran()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
devtools::release()
n.C=100
n.EC=30
wk.n1 <- floor(n.C/n.EC)
wk.n2 <- n.C-wk.n1*n.EC
wk.n3 <- sample(n.EC,wk.n2)
wk.n4 <- matrix(c(1:n.EC,rep(wk.n1,n.EC)),n.EC,2)
wk.n4[wk.n3,2] <- wk.n1+1
en  <- NULL
tmp <- 0
for(i in 1:n.EC){
en  <- c(en,wk.n4[i,2]+tmp)
tmp <- tmp+en
}
n.EC
en  <- NULL
tmp <- 0
for(i in 1:n.EC){
en  <- c(en,wk.n4[i,2]+tmp)
tmp <- tmp+en
}
i
wk.n4[i,2]
tmp
en  <- NULL
tmp <- 0
for(i in 1:n.EC){
en  <- c(en,wk.n4[i,2]+tmp)
tmp <- tmp+en[i]
}
en
wk.n4[,2]
en  <- NULL
tmp <- 0
for(i in 1:n.EC){
en  <- c(en,wk.n4[i,2]+tmp)
tmp <- tmp+wk.n4[i,2]
}
en
tmp
cbind(wk.n4,en)
wk.n1 <- floor(n.C/n.EC)
wk.n2 <- n.C-wk.n1*n.EC
wk.n3 <- sample(n.EC,wk.n2)
wk.n4 <- data.frame(X1=1:n.EC,X2=wk.n1)
wk.n4[wk.n3,"X2"] <- wk.n1+1
wk.n5 <- wk.n4 %>% mutate(en=cumsum(X2))
library(dplyr)
wk.n1 <- floor(n.C/n.EC)
wk.n2 <- n.C-wk.n1*n.EC
wk.n3 <- sample(n.EC,wk.n2)
wk.n4 <- data.frame(X1=1:n.EC,X2=wk.n1)
wk.n4[wk.n3,"X2"] <- wk.n1+1
wk.n5 <- wk.n4 %>% mutate(en=cumsum(X2))
wk.n6 <- data.frame(wk.n5,st=c(1,wk.n5$en[-n.EC]+1))
wk.n5
wk.n1 <- floor(n.C/n.EC)
wk.n2 <- n.C-wk.n1*n.EC
wk.n3 <- sample(n.EC,wk.n2)
wk.n4 <- matrix(c(1:n.EC,rep(wk.n1,n.EC)),n.EC,2)
wk.n4[wk.n3,2] <- wk.n1+1
en  <- NULL
tmp <- 0
for(i in 1:n.EC){
en  <- c(en,wk.n4[i,2]+tmp)
tmp <- tmp+wk.n4[i,2]
}
cbind(wk.n4,en)
wk.n4 <- data.frame(X1=1:n.EC,X2=wk.n1)
wk.n4[wk.n3,"X2"] <- wk.n1+1
wk.n5 <- wk.n4 %>% mutate(en=cumsum(X2))
wk.n5
wk.n1 <- floor(n.C/n.EC)
wk.n2 <- n.C-wk.n1*n.EC
wk.n3 <- sample(n.EC,wk.n2)
wk.n4 <- matrix(c(1:n.EC,rep(wk.n1,n.EC)),n.EC,2)
wk.n4[wk.n3,2] <- wk.n1+1
en  <- NULL
tmp <- 0
for(i in 1:n.EC){
en  <- c(en,wk.n4[i,2]+tmp)
tmp <- tmp+wk.n4[i,2]
}
wk.n5 <- cbind(wk.n4,en,c(1,en[-n.EC]+1))
wk.n5
wk.n4 <- data.frame(X1=1:n.EC,X2=wk.n1)
wk.n4[wk.n3,"X2"] <- wk.n1+1
wk.n5 <- wk.n4 %>% mutate(en=cumsum(X2))
wk.n6 <- data.frame(wk.n5,st=c(1,wk.n5$en[-n.EC]+1))
wk.n6
st <- c(1,en[-n.EC]+1)
st
en
wk.n1 <- floor(n.C/n.EC)
wk.n2 <- n.C-wk.n1*n.EC
wk.n3 <- sample(n.EC,wk.n2)
wk.n4 <- matrix(c(1:n.EC,rep(wk.n1,n.EC)),n.EC,2)
wk.n4[wk.n3,2] <- wk.n1+1
en  <- NULL
tmp <- 0
for(i in 1:n.EC){
en  <- c(en,wk.n4[i,2]+tmp)
tmp <- tmp+wk.n4[i,2]
}
st <- c(1,en[-n.EC]+1)
wk.ps1 <- sort(invet.ps)
library(psBayesborrow)
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 200
nevent.ECp <- 180
n.EC       <- 50
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect <- c(0.9,0.9)
psmatch.cov <- c("cov1","cov2")
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
analysis.cov <- c("cov1")
method.borrow <- list(list(prior="noborrow"),
list(prior="normal",scale=0.5))
nsim <- 5
aa<-psborrow.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, n.EC=n.EC, accrual=accrual,
out.mevent.CT=out.mevent.CT, out.mevent.CC=out.mevent.CC, driftHR=driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect=cov.effect,
psmatch.cov=psmatch.cov, method.whomatch=method.whomatch,
method.matching=method.matching, method.psorder=method.psorder,
analysis.cov=analysis.cov, method.borrow=method.borrow,
chains=1, iter=100, nsim=nsim, seed=100)
psborrow.summary(aa)
object<-aa
reject  <- object$reject
theta   <- object$theta
colflg  <- object$method.borrow
t.theta <- object$true.theta
rrate    <- apply(reject[,colflg],2,mean)
bias     <- apply(theta[theta$measure=="mean",colflg]-t.theta,2,mean)
empsd    <- apply(theta[theta$measure=="mean",colflg],2,stats::sd)
modsd    <- apply(theta[theta$measure=="sd",colflg],2,mean)
empmodsd <- empsd/modsd
covprob  <- apply((theta[theta$measure=="lcri",colflg]<t.theta)*(theta[theta$measure=="ucri",colflg]>t.theta),2,mean)
res.out <- data.frame(measure=c("Reject","Bias","EmpSD","ModSD","EmpSD/ModSD","Coverage Prob."),
round(rbind(rrate,bias,empsd,modsd,empmodsd,covprob),digits=3))
colnames(res.out) <- c("measure",colflg)
rownames(res.out) <- NULL
ov <- object$ov
sum.ov <- ov %>%
dplyr::group_by(factor,type) %>%
dplyr::summarise_at(vars(ov),c(mean,median,sd),na.rm=TRUE)
res.cov <- data.frame(
factor = sum.ov$factor,
type   = sum.ov$type,
mean   = round(sum.ov$fn1,digits=3),
median = round(sum.ov$fn2,digits=3),
sd     = round(sum.ov$fn3,digits=3))
result <- list(res.out         = res.out,
res.cov         = res.cov,
n.CT            = object$n.CT,
n.CC            = object$n.CC,
n.ECp           = object$n.ECp,
n.EC            = object$n.EC,
drift           = object$drift,
method.psest    = object$method.psest,
method.pslink   = object$method.pslink,
method.whomatch = object$method.whomatch,
method.matching = object$method.matching,
method.psorder  = object$method.psorder)
result
res.out
rrate
reject
theta
colflg
object
object
object$reject
object$theta
reject
rrate    <- apply(reject,2,mean)
reject
method.borrow
aa
reject
psborrow.summary(aa)
reject
object
object$reject
colnames(method.borrow)
colname(object$reject)
colnames(object$reject)
colnames(object$reject)[-c(1,2)]
reject  <- object$reject
theta   <- object$theta
colflg  <- colnames(object$reject)[-c(1,2)]
t.theta <- object$true.theta
reject
theta
colflg
t.theta
rrate    <- apply(reject[,colflg],2,mean)
bias     <- apply(theta[theta$measure=="mean",colflg]-t.theta,2,mean)
empsd    <- apply(theta[theta$measure=="mean",colflg],2,stats::sd)
modsd    <- apply(theta[theta$measure=="sd",colflg],2,mean)
empmodsd <- empsd/modsd
covprob  <- apply((theta[theta$measure=="lcri",colflg]<t.theta)*(theta[theta$measure=="ucri",colflg]>t.theta),2,mean)
res.out <- data.frame(measure=c("Reject","Bias","EmpSD","ModSD","EmpSD/ModSD","Coverage Prob."),
round(rbind(rrate,bias,empsd,modsd,empmodsd,covprob),digits=3))
colnames(res.out) <- c("measure",colflg)
rownames(res.out) <- NULL
ov <- object$ov
sum.ov <- ov %>%
dplyr::group_by(factor,type) %>%
dplyr::summarise_at(vars(ov),c(mean,median,sd),na.rm=TRUE)
res.cov <- data.frame(
factor = sum.ov$factor,
type   = sum.ov$type,
mean   = round(sum.ov$fn1,digits=3),
median = round(sum.ov$fn2,digits=3),
sd     = round(sum.ov$fn3,digits=3))
result <- list(res.out         = res.out,
res.cov         = res.cov,
n.CT            = object$n.CT,
n.CC            = object$n.CC,
n.ECp           = object$n.ECp,
n.EC            = object$n.EC,
drift           = object$drift,
method.psest    = object$method.psest,
method.pslink   = object$method.pslink,
method.whomatch = object$method.whomatch,
method.matching = object$method.matching,
method.psorder  = object$method.psorder)
result
reject  <- object$reject
theta   <- object$theta
colflg  <- colnames(object$reject)[-c(1,2)]
t.theta <- object$true.theta
rrate    <- apply(reject[,colflg],2,mean)
bias     <- apply(theta[theta$measure=="mean",colflg]-t.theta,2,mean)
empsd    <- apply(theta[theta$measure=="mean",colflg],2,stats::sd)
modsd    <- apply(theta[theta$measure=="sd",colflg],2,mean)
modempsd <- modsd/empsd
covprob  <- apply((theta[theta$measure=="lcri",colflg]<t.theta)*(theta[theta$measure=="ucri",colflg]>t.theta),2,mean)
res.out <- data.frame(measure=c("Reject","Bias","EmpSD","ModSD","ModSD/EmpSD","Coverage Prob."),
round(rbind(rrate,bias,empsd,modsd,modempsd,covprob),digits=3))
colnames(res.out) <- c("measure",colflg)
rownames(res.out) <- NULL
res.out
ov <- object$ov
ov
ov
sum.ov <- ov %>%
dplyr::group_by(factor,type) %>%
dplyr::summarise_at(vars(ov),c(mean,median,sd),na.rm=TRUE)
sum.ov
res.cov <- data.frame(
factor = sum.ov$factor,
type   = sum.ov$type,
mean   = round(sum.ov$fn1,digits=3),
median = round(sum.ov$fn2,digits=3),
sd     = round(sum.ov$fn3,digits=3))
res.cov
ov
ov[,c("factor","type")]
unique(ov[,c("factor","type")])
ov.ft <- unique(ov[,c("factor","type")])
ov.ft
sum.ov
ov.ft
ov.ft   <- unique(ov[,c("factor","type")])
l.ov.ft <- nrow(ov.ft)
l.ov.ft
ov.ft
ov
ov$factor
i=1
(ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])
ov
sum.ov
ov.ft   <- unique(ov[,c("factor","type","comparison")])
l.ov.ft <- nrow(ov.ft)
ov.ft
l.ov.ft
(ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])&(ov$comparison==ov.ft$comparison[i])
ov
mean(ov[anaflg,"ov"])
anaflg <- (ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])&(ov$comparison==ov.ft$comparison[i])
mean(ov[anaflg,"ov"])
anaflg
sum.ov
res.cov
ov.ft$factor[i]
ov.ft   <- unique(ov[,c("factor","type","comparison")])
l.ov.ft <- nrow(ov.ft)
res.cov <- NULL
for(i in 1:l.ov.ft){
anaflg <- (ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])&(ov$comparison==ov.ft$comparison[i])
res.cov <- rbind(res.cov,data.frame(
factor     = ov.ft$factor[i],
type       = ov.ft$type[i],
comparison = ov.ft$comparison[i]
mean       = round(mean(ov[anaflg,"ov"]),digits=3),
ov.ft   <- unique(ov[,c("factor","type","comparison")])
l.ov.ft <- nrow(ov.ft)
res.cov <- NULL
for(i in 1:l.ov.ft){
anaflg <- (ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])&(ov$comparison==ov.ft$comparison[i])
res.cov <- rbind(res.cov,data.frame(
factor     = ov.ft$factor[i],
type       = ov.ft$type[i],
comparison = ov.ft$comparison[i],
mean       = round(mean(ov[anaflg,"ov"]),digits=3),
median     = round(median(ov[anaflg,"ov"]),digits=3),
sd         = round(sd(ov[anaflg,"ov"],digits=3))
}
ov.ft   <- unique(ov[,c("factor","type","comparison")])
l.ov.ft <- nrow(ov.ft)
res.cov <- NULL
ov.ft
anaflg <- (ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])&(ov$comparison==ov.ft$comparison[i])
ov.ft   <- unique(ov[,c("factor","type","comparison")])
l.ov.ft <- nrow(ov.ft)
res.cov <- NULL
for(i in 1:l.ov.ft){
anaflg <- (ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])&(ov$comparison==ov.ft$comparison[i])
res.cov <- rbind(res.cov,data.frame(
factor     = ov.ft$factor[i],
type       = ov.ft$type[i],
comparison = ov.ft$comparison[i],
mean       = round(mean(ov[anaflg,"ov"]),digits=3),
median     = round(median(ov[anaflg,"ov"]),digits=3),
sd         = round(sd(ov[anaflg,"ov"],digits=3))))
}
data.frame(
factor     = ov.ft$factor[i],
type       = ov.ft$type[i],
comparison = ov.ft$comparison[i],
mean       = round(mean(ov[anaflg,"ov"]),digits=3),
median     = round(median(ov[anaflg,"ov"]),digits=3),
sd         = round(sd(ov[anaflg,"ov"],digits=3)))
round(sd(ov[anaflg,"ov"],digits=3)
)
mean(ov[anaflg,"ov"])
round(mean(ov[anaflg,"ov"]),digits=3)
round(median(ov[anaflg,"ov"]),digits=3)
round(sd(ov[anaflg,"ov"],digits=3))
round(sd(ov[anaflg,"ov"]),digits=3))
round(sd(ov[anaflg,"ov"]),digits=3)
ov.ft   <- unique(ov[,c("factor","type","comparison")])
l.ov.ft <- nrow(ov.ft)
res.cov <- NULL
for(i in 1:l.ov.ft){
anaflg <- (ov$factor==ov.ft$factor[i])&(ov$type==ov.ft$type[i])&(ov$comparison==ov.ft$comparison[i])
res.cov <- rbind(res.cov,data.frame(
factor     = ov.ft$factor[i],
type       = ov.ft$type[i],
comparison = ov.ft$comparison[i],
mean       = round(mean(ov[anaflg,"ov"]),digits=3),
median     = round(median(ov[anaflg,"ov"]),digits=3),
sd         = round(sd(ov[anaflg,"ov"]),digits=3)
))
}
res.cov
ov <- object$ov
sum.ov <- ov %>%
dplyr::group_by(factor,type) %>%
dplyr::summarise_at(vars(ov),c(mean,median,sd),na.rm=TRUE)
res.cov <- data.frame(
factor = sum.ov$factor,
type   = sum.ov$type,
mean   = round(sum.ov$fn1,digits=3),
median = round(sum.ov$fn2,digits=3),
sd     = round(sum.ov$fn3,digits=3))
res.cov
remove.packages("psBayesborrow")
remove.packages("psBayesborrow")
library(psBayesborrow)
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 200
nevent.ECp <- 180
n.EC       <- 50
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect <- c(0.9,0.9)
psmatch.cov <- c("cov1","cov2")
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
analysis.cov <- c("cov1")
method.borrow <- list(list(prior="noborrow"),
list(prior="normal",scale=0.5))
nsim <- 5
aa<-psborrow.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, n.EC=n.EC, accrual=accrual,
out.mevent.CT=out.mevent.CT, out.mevent.CC=out.mevent.CC, driftHR=driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect=cov.effect,
psmatch.cov=psmatch.cov, method.whomatch=method.whomatch,
method.matching=method.matching, method.psorder=method.psorder,
analysis.cov=analysis.cov, method.borrow=method.borrow,
chains=1, iter=100, nsim=nsim)
psborrow.summary(aa)
