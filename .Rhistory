ov     <- rbind(ov,data.frame(sim=ss,factor=psmatch.cov[i],type="continuous",comparison="CTvsCC.EC",ov=ov.cov))
}else if(cov.C[[i]]$dist=="binom"){
ov.cov <- mean(covlist$Z1)-mean(covlist$Z2)
ov     <- rbind(ov,data.frame(sim=ss,factor=psmatch.cov[i],type="binary",comparison="CTvsCC.EC",ov=ov.cov))
}
}
Z1 <- data.ps[(data.ps$study==1)&(data.ps$treat==0),]
Z2 <- data.ps[out.psmatch$subjid.EC,]
pslist <- list(Z1=Z1[,"ps"],Z2=Z2[,"ps"])
ov.ps  <- (overlap(pslist,boundaries=c(0,1)))$OV
ov     <- rbind(ov,data.frame(sim=ss,factor="ps",type="continuous",comparison="CCvsEC",ov=ov.ps))
for(i in 1:length(psmatch.cov)){
covlist  <- list(Z1=Z1[,psmatch.cov[i]],Z2=Z2[,psmatch.cov[i]])
if(cov.C[[i]]$dist=="norm"){
ov.cov <- (overlap(covlist))$OV
ov     <- rbind(ov,data.frame(sim=ss,factor=psmatch.cov[i],type="continuous",comparison="CCvsEC",ov=ov.cov))
}else if(cov.C[[i]]$dist=="binom"){
ov.cov <- mean(covlist$Z1)-mean(covlist$Z2)
ov     <- rbind(ov,data.frame(sim=ss,factor=psmatch.cov[i],type="binary",comparison="CCvsEC",ov=ov.cov))
}
}
}
t.theta <- log(out.prob.CT/(1-out.prob.CT))-log(out.prob.CC/(1-out.prob.CC))
return(list(reject=reject,theta=theta,ov=ov,
n.CT=n.CT,n.CC=n.CC,n.ECp=n.ECp,n.EC=n.EC,drift=driftOR,
true.theta=t.theta,
method.psest=method.psest,method.pslink=method.pslink,
method.whomatch=method.whomatch,
method.matching=method.matching,method.psorder=method.psorder))
}
n.CT       <- 100
n.CC       <- 50
n.ECp      <- 1000
n.EC       <- 50
out.prob.CT <- 0.2
out.prob.CC <- 0.2
driftOR     <- 1.0
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.1,0.1)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.1,0.1)
psmatch.cov <- c("cov1","cov2")
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
analysis.cov <- c("cov1")
method.borrow <- list(list(prior="noborrow"),
list(prior="normal",scale=0.5))
nsim <- 5
psborrow.bin(
n.CT=n.CT, n.CC=n.CC, n.ECp=n.ECp, n.EC=n.EC,
out.prob.CT=out.prob.CT, out.prob.CC=out.prob.CC, driftOR=driftOR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC,
psmatch.cov=psmatch.cov, method.whomatch=method.whomatch,
method.matching=method.matching, method.psorder=method.psorder,
analysis.cov=analysis.cov, method.borrow=method.borrow,
nsim=nsim, seed=100)
library(psBayesborrow)
psborrow.bin
library(survival)
library(psBayesborrow)
library(psBayesborrow)
library(survival)
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 1000
nevent.ECp <- 800
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.1,0.1)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.1,0.1)
indata <- trial.simulation.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, accrual=accrual,
out.mevent.CT, out.mevent.CC, driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC)
n.EC <- 50
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
out.psmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
indata.match <- rbind(indata[indata$study==1,],indata[out.psmatch$subjid.EC,])
method.borrow <- list(list(prior="cauchy",scale=2.0),
list(prior="normal",scale=0.5))
commensurate.t2e(
Surv(time,status)~cov1+cov2,data=indata.match,method.borrow=method.borrow,chains=1,iter=100)
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 200
nevent.ECp <- 800
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.1,0.1)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.1,0.1)
indata <- trial.simulation.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, accrual=accrual,
out.mevent.CT, out.mevent.CC, driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC)
out.psmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
out.psmatch
n.EC
n.ECp
indata.match <- rbind(indata[indata$study==1,],indata[out.psmatch$subjid.EC,])
method.borrow <- list(list(prior="cauchy",scale=2.0),
list(prior="normal",scale=0.5))
commensurate.t2e(
Surv(time,status)~cov1+cov2,data=indata.match,method.borrow=method.borrow,chains=1,iter=100)
rm()
objects()
rm(objects())
objects()
ls()
rm(ls())
ls()
rm(list=ls())
ls()
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 200
nevent.ECp <- 800
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.1,0.1)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.1,0.1)
indata <- trial.simulation.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, accrual=accrual,
out.mevent.CT, out.mevent.CC, driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC)
indata <- trial.simulation.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, accrual=accrual,
out.mevent.CT, out.mevent.CC, driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC)
n.CT
n.CC
nevent.C
rm(list=ls())
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 200
nevent.ECp <- 180
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.1,0.1)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.1,0.1)
indata <- trial.simulation.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, accrual=accrual,
out.mevent.CT, out.mevent.CC, driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC)
n.EC <- 50
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
out.psmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
indata.match <- rbind(indata[indata$study==1,],indata[out.psmatch$subjid.EC,])
method.borrow <- list(list(prior="cauchy",scale=2.0),
list(prior="normal",scale=0.5))
commensurate.t2e(
Surv(time,status)~cov1+cov2,data=indata.match,method.borrow=method.borrow,chains=1,iter=100)
ls()
rm(list=ls())
n.CT  <- 100
n.CC  <- 50
n.ECp <- 200
out.mean.CT <- 0
out.sd.CT   <- 1
out.mean.CC <- 0
out.sd.CC   <- 1
driftdiff   <- 0
out.sd.EC   <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.1,0.1)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.1,0.1)
indata <- trial.simulation.cont(
n.CT=n.CT, n.CC=n.CC, n.ECp=n.ECp,
out.mean.CT=out.mean.CT, out.sd.CT=out.sd.CT,
out.mean.CC=out.mean.CC, out.sd.CC=out.sd.CC,
driftdiff=driftdiff, out.sd.EC=out.sd.EC,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC)
n.EC <- 50
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
out.psmatch <- psmatch(
study~cov1+cov2, data=indata, n.EC=n.EC,
method.whomatch=method.whomatch, method.matching=method.matching,
method.psorder=method.psorder)
indata.match <- rbind(indata[indata$study==1,],indata[out.psmatch$subjid.EC,])
method.borrow <- list(list(prior="cauchy",scale=2.0),
list(prior="normal",scale=0.5))
commensurate.cont(y~cov1,data=indata.match,method.borrow=method.borrow,chains=1,iter=100)
install.packages("optmatch")
library(optmatch)
library(survival)
library(optmatch)
library(survival)
library(psBayesborrow)
library(psBayesborrow)
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 200
nevent.ECp <- 180
n.EC       <- 50
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.9,0.9)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.9,0.9)
psmatch.cov <- c("cov1","cov2")
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
analysis.cov <- c("cov1")
method.borrow <- list(list(prior="noborrow"),
list(prior="normal",scale=0.5))
nsim <- 5
res <- psborrow.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, n.EC=n.EC, accrual=accrual,
out.mevent.CT=out.mevent.CT, out.mevent.CC=out.mevent.CC, driftHR=driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC,
psmatch.cov=psmatch.cov, method.whomatch=method.whomatch,
method.matching=method.matching, method.psorder=method.psorder,
analysis.cov=analysis.cov, method.borrow=method.borrow,
chains=1, iter=100, nsim=nsim, seed=100)
res$reject
res$theta
res$reject[,3]
res$reject
res$reject[,"noborrow"]
res$reject[,"noborrow"]
res$reject[,"normal0.5"]
res$theta
res$theta[,"noborrow"]
round(res$theta[,"noborrow"],digits=3)
round(res$theta[,"normal0.5"],digits=3)
round(res$ov[,"noborrow"],digits=3)
res$ov
round(res$ov[,"ov"],digits=3)
ov
rj1.sim <- res$reject[,"noborrow"]
rj2.sim <- res$reject[,"normal0.5"]
th1.sim <- round(res$theta[,"noborrow"],digits=3)
th2.sim <- round(res$theta[,"normal0.5"],digits=3)
ov.sim  <- round(res$ov[,"ov"],digits=3)
rj1.sim
rj1.exp <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
rj1.exp
rj2.sim
th1.sim
th2.sim
ov.sim
library(testthat)
rj1.sim <- res$reject[,"noborrow"]
rj2.sim <- res$reject[,"normal0.5"]
th1.sim <- round(res$theta[,"noborrow"],digits=3)
th2.sim <- round(res$theta[,"normal0.5"],digits=3)
ov.sim  <- round(res$ov[,"ov"],digits=3)
rj1.exp <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
rj2.exp <- c( TRUE,FALSE,FALSE,FALSE,FALSE)
th1.exp <- c(
0.396,0.382,0.264,-0.078,0.862,-0.066,-0.076,0.198,-0.408,0.240,-0.252,-0.229,0.166,
-0.683,-0.043,-0.021,-0.012,0.182,-0.406,0.292,-0.104,-0.099,0.177,-0.446,0.180)
th2.exp <- c(
0.265,0.255,0.142,0.009,0.497,-0.070,-0.058,0.261,-0.592,0.333,-0.221,-0.204,0.166,
-0.564,0.081,-0.064,-0.076,0.159,-0.397,0.220,-0.188,-0.141,0.196,-0.550,0.120)
ov.exp <- c(
0.894,0.846,0.030,0.864,0.751,-0.020,0.961,0.930,0.000,0.868,0.926,-0.040,0.957,
0.907,0.060,0.833,0.859,-0.160,0.902,0.903,-0.070,0.921,0.886,0.040,0.962,0.915,
0.050,0.913,0.945,-0.080)
test_that("Check boinet simulation results", {
expect_identical(rj1.sim,rj1.exp)
expect_identical(rj2.sim,rj2.exp)
expect_identical(th1.sim,th1.exp)
expect_identical(th2.sim,th2.exp)
expect_identical(ov.sim,  ov.exp)
})
devtools::install_deps()
devtools::test()
devtools::test()
devtools::test_coverage()
devtools::run_examples()
.Last.error
devtools::document()
devtools::spell_check()
devtools::check()
.Last.error
devtools::check()
1+1
devtools::test()
devtools::run_examples()
devtools::check()
usethis::use_news_md
usethis::use_news_md()
devtools::check_win_devel()
use_gpl_license()
devtools::check()
results <- rhub::check_for_cran()
results <- rhub::check_for_cran()
results <- rhub::check_for_cran()
library(testthat)
library(psBayesborrow)
n.CT       <- 100
n.CC       <- 50
nevent.C   <- 100
n.ECp      <- 200
nevent.ECp <- 180
n.EC       <- 50
accrual    <- 16
out.mevent.CT <- 6
out.mevent.CC <- 6
driftHR       <- 1
cov.C <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.C <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.C <- c(0.9,0.9)
cov.EC <- list(list(dist="norm",mean=0,sd=1,lab="cov1"),
list(dist="binom",prob=0.4,lab="cov2"))
cov.cor.EC <- rbind(c(  1,0.1),
c(0.1,  1))
cov.effect.EC <- c(0.9,0.9)
psmatch.cov <- c("cov1","cov2")
method.whomatch <- "conc.treat"
method.matching <- "optimal"
method.psorder  <- NULL
analysis.cov <- c("cov1")
method.borrow <- list(list(prior="noborrow"),
list(prior="normal",scale=0.5))
nsim <- 5
res <- psborrow.t2e(
n.CT=n.CT, n.CC=n.CC, nevent.C=nevent.C,
n.ECp=n.ECp, nevent.ECp=nevent.ECp, n.EC=n.EC, accrual=accrual,
out.mevent.CT=out.mevent.CT, out.mevent.CC=out.mevent.CC, driftHR=driftHR,
cov.C=cov.C, cov.cor.C=cov.cor.C, cov.effect.C=cov.effect.C,
cov.EC=cov.EC, cov.cor.EC=cov.cor.EC, cov.effect.EC=cov.effect.EC,
psmatch.cov=psmatch.cov, method.whomatch=method.whomatch,
method.matching=method.matching, method.psorder=method.psorder,
analysis.cov=analysis.cov, method.borrow=method.borrow,
chains=1, iter=100, nsim=nsim, seed=100)
res$theta[,"noborrow"]
ceiling(res$theta[,"noborrow"],digits=3)
ceiling(res$theta[,"noborrow"])
ceiling(1000*res$theta[,"noborrow"])/1000
rj1.sim <- res$reject[,"noborrow"]
rj2.sim <- res$reject[,"normal0.5"]
th1.sim <- ceiling(1000*res$theta[,"noborrow"])/1000
th2.sim <- ceiling(1000*res$theta[,"normal0.5"])/1000
ov.sim  <- ceiling(1000*res$ov[,"ov"])/1000
rj1.exp <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
rj2.exp <- c( TRUE,FALSE,FALSE,FALSE,FALSE)
rj1.sim
rj2.sim
th1.sim
th2.sim
ov.sim
rj1.sim <- res$reject[,"noborrow"]
rj2.sim <- res$reject[,"normal0.5"]
th1.sim <- ceiling(10*res$theta[,"noborrow"])/10
th2.sim <- ceiling(10*res$theta[,"normal0.5"])/10
ov.sim  <- ceiling(10*res$ov[,"ov"])/10
rj1.exp <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
rj2.exp <- c( TRUE,FALSE,FALSE,FALSE,FALSE)
th1.sim
th2.sim
rj1.sim <- res$reject[,"noborrow"]
rj2.sim <- res$reject[,"normal0.5"]
th1.sim <- ceiling(100*res$theta[,"noborrow"])/100
th2.sim <- ceiling(100*res$theta[,"normal0.5"])/100
ov.sim  <- ceiling(100*res$ov[,"ov"])/100
rj1.exp <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
rj2.exp <- c( TRUE,FALSE,FALSE,FALSE,FALSE)
th1.sim
th2.sim
ov.sim
rj1.sim <- res$reject[,"noborrow"]
rj2.sim <- res$reject[,"normal0.5"]
th1.sim <- ceiling(100*res$theta[,"noborrow"])/100
th2.sim <- ceiling(100*res$theta[,"normal0.5"])/100
ov.sim  <- ceiling(100*res$ov[,"ov"])/100
rj1.exp <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
rj2.exp <- c( TRUE,FALSE,FALSE,FALSE,FALSE)
th1.exp <- c(
0.40,0.39,0.27,-0.07,0.87,-0.06,-0.07,0.20,-0.40,0.25,-0.25,-0.22,0.17,-0.68,-0.04,-0.02,-0.01,0.19,-0.40
0.30,-0.10,-0.09,0.18,-0.44,0.18)
rj1.sim <- res$reject[,"noborrow"]
rj2.sim <- res$reject[,"normal0.5"]
th1.sim <- ceiling(100*res$theta[,"noborrow"])/100
th2.sim <- ceiling(100*res$theta[,"normal0.5"])/100
ov.sim  <- ceiling(100*res$ov[,"ov"])/100
rj1.exp <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
rj2.exp <- c( TRUE,FALSE,FALSE,FALSE,FALSE)
th1.exp <- c(
0.40,0.39,0.27,-0.07,0.87,-0.06,-0.07,0.20,-0.40,0.25,-0.25,-0.22,0.17,-0.68,-0.04,-0.02,-0.01,0.19,-0.40,
0.30,-0.10,-0.09,0.18,-0.44,0.18)
th2.exp <- c(
0.27,0.26,0.15,0.01,0.50,-0.06,-0.05,0.27,-0.59,0.34,-0.22,-0.20,0.17,-0.56,0.09,-0.06,-0.07,0.16,-0.39,
0.23,-0.18,-0.14,0.20,-0.54,0.12)
ov.exp <- c(
0.90,0.85,0.04,0.87,0.76,-0.01,0.97,0.93,0.00,0.87,0.93,-0.03,0.96,0.91,0.06,0.84,0.86,-0.15,0.91,
0.91,-0.07,0.93,0.89,0.04,0.97,0.92,0.05,0.92,0.95,-0.08)
test_that("Check psBayesborrow simulation results",{
expect_identical(rj1.sim,rj1.exp)
expect_identical(rj2.sim,rj2.exp)
expect_identical(th1.sim,th1.exp)
expect_identical(th2.sim,th2.exp)
expect_identical(ov.sim,  ov.exp)
})
results <- rhub::check_for_cran()
results <- rhub::check_for_cran()
install.packages("rhub")
results <- rhub::check_for_cran()
results$cran_summary()
results$cran_summary()
revdep_check(timeout = 0)
library(revdepcheck)
install.packages("revdepcheck")
devtools::install_github('r-lib/revdepcheck')
library(revdepcheck)
revdep_check(timeout = 0)
revdep_check(timeout = 0)
results$cran_summary()
1+1
library(psBayesborrow)
library(psBayesborrow)
